import telebot
import requests
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = '8006512955:AAF73BS-1stSho8V-qWvoI-Mn7oQXC-9dAA'
bot = telebot.TeleBot(TOKEN)

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
  bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∞–¥—Ä–µ—Å.")
  send_location_request(message)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
def send_location_request(message):
  markup = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
  location_button = KeyboardButton("üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
  markup.add(location_button)
  bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
@bot.message_handler(content_types=['location'])
def handle_location(message):
  if message.location is not None:
    latitude = message.location.latitude
    longitude = message.location.longitude

    address = get_address_from_coordinates(latitude, longitude)
    if address:
      bot.reply_to(message, f"–í–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {address}")
    else:
      bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∞–¥—Ä–µ—Å –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")

def get_address_from_coordinates(lat, lon):
  try:
    url = f"https://nominatim.openstreetmap.org/reverse?format=json&lat={lat}&lon={lon}&zoom=18&addressdetails=1"
    headers = {"User-Agent": "TelegramBot/1.0 (example@example.com)"}
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
      data = response.json()
      if "address" in data:
        return data["display_name"]
        return None
  except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞: {e}")
    return None

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
  print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
  bot.infinity_polling()
